services:

  redis:
    image: redis:7.0
    networks:
      - app-network
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  zipkin:
    image: openzipkin/zipkin
    networks:
      - app-network
    ports:
      - "9411:9411"

  config-provider:
    build:
      context: ./external-configuration-provider
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8888:8888"

  auth-api:
    depends_on:
      - config-provider
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8000:8000"
    environment:
      - CONFIG_PROVIDER_URL=http://config-provider:8888

  frontend:
    depends_on:
      - config-provider
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8080:8080"

  log-message-processor:
    depends_on:
      - config-provider
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    networks:
      - app-network
    environment:
      - CONFIG_PROVIDER_URL=http://config-provider:8888

  todos-api:
    depends_on:
      - config-provider
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8082:8082"
    environment:
      - CONFIG_PROVIDER_URL=http://config-provider:8888

  users-api:
    depends_on:
      - config-provider
    build:
      context: ./users-api
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8083:8083"
    environment:
      - CONFIG_PROVIDER_URL=http://config-provider:8888

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  redis-secondary-data:
